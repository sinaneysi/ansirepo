name: Ansible Deploy (manual)

on:
  workflow_dispatch:
    inputs:
      run_plan:
        type: choice
        description: "Which playbook(s) to run"
        options: [all, prepare, reverse-proxy, app, log-stack]
        default: all
      inventory:
        type: choice
        description: "Which inventory to use"
        options: [staging, prod]
        default: staging

permissions:
  contents: read

concurrency:
  group: ansible-deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      inventory: ${{ steps.set-inventory.outputs.inventory }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Render runtime secret vars (group_vars)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p group_vars/all
          echo "${{ secrets.GROUP_VARS_YAML }}" > group_vars/all/99-runtime-secrets.yml
          python3 - <<'PY'
          import yaml; yaml.safe_load(open('group_vars/all/99-runtime-secrets.yml'))
          print("Secrets YAML parsed OK")
          PY

      - name: Set inventory
        id: set-inventory
        run: echo "inventory=inventory/${{ inputs.inventory }}.yml" >> $GITHUB_OUTPUT

  prepare:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ inputs.run_plan == 'prepare' || inputs.run_plan == 'all' }}
    steps:
      - uses: actions/checkout@v4
      - uses: dawidd6/action-ansible-playbook@v4
        with:
          playbook: prepare.yml
          directory: .
          key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}
          configuration: |
            [defaults]
            stdout_callback = yaml
            retry_files_enabled = False
          options: |
            --inventory ${{ needs.setup.outputs.inventory }}
            --diff
            -e @group_vars/all/99-runtime-secrets.yml
            -e deploy_commit=${{ github.sha }}

  reverse-proxy:
    runs-on: ubuntu-latest
    needs: prepare
    if: ${{ inputs.run_plan == 'reverse-proxy' || inputs.run_plan == 'all' }}
    steps:
      - uses: actions/checkout@v4
      - uses: dawidd6/action-ansible-playbook@v4
        with:
          playbook: reverse-proxy.yml
          directory: .
          key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}
          options: |
            --inventory ${{ needs.setup.outputs.inventory }}
            --diff
            -e @group_vars/all/99-runtime-secrets.yml
            -e deploy_commit=${{ github.sha }}

  app:
    runs-on: ubuntu-latest
    needs: reverse-proxy
    if: ${{ inputs.run_plan == 'app' || inputs.run_plan == 'all' }}
    steps:
      - uses: actions/checkout@v4
      - uses: dawidd6/action-ansible-playbook@v4
        with:
          playbook: app.yml
          directory: .
          key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}
          options: |
            --inventory ${{ needs.setup.outputs.inventory }}
            --diff
            -e @group_vars/all/99-runtime-secrets.yml
            -e deploy_commit=${{ github.sha }}

  log-stack:
    runs-on: ubuntu-latest
    needs: app
    if: ${{ inputs.run_plan == 'log-stack' || inputs.run_plan == 'all' }}
    steps:
      - uses: actions/checkout@v4
      - uses: dawidd6/action-ansible-playbook@v4
        with:
          playbook: log-stack.yml
          directory: .
          key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}
          options: |
            --inventory ${{ needs.setup.outputs.inventory }}
            --diff
            -e @group_vars/all/99-runtime-secrets.yml
            -e deploy_commit=${{ github.sha }}

  cleanup:
    runs-on: ubuntu-latest
    if: always()
    needs: [setup, prepare, reverse-proxy, app, log-stack]
    steps:
      - name: Cleanup secrets file
        run: rm -f group_vars/all/99-runtime-secrets.yml || true

      - name: Upload Ansible logs (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ansible-logs
          path: ansible.log
          retention-days: 7
